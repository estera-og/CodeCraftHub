# docker-compose.yml
# (Compose v2+ ignores the top-level `version:` key, so it's omitted.)

services:
  mongo:
    image: mongo:4.4
    container_name: cch_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-changeme}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongo --quiet admin --eval \"db.adminCommand('ping').ok\" | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  user-service:
    build: .
    container_name: cch_user_service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      # App connects to the mongo container by its service name
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-changeme}@mongo:27017/userdb?authSource=admin
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-dev_access_secret_change_me}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev_refresh_secret_change_me}
      ACCESS_TOKEN_TTL: ${ACCESS_TOKEN_TTL:-15m}
      REFRESH_TOKEN_TTL: ${REFRESH_TOKEN_TTL:-7d}
      CORS_ORIGINS: ${CORS_ORIGINS:-}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  mongo_data: {}

